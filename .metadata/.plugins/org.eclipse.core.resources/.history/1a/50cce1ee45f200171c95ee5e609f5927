package controllers;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import data.TodoDAO;
import entities.Todo;

@RestController
public class TodoController {
	
	@Autowired
	private TodoDAO todoDAO;
	
	@RequestMapping(path="/user/{uid}/todos", method=RequestMethod.GET)
	public List<Todo> index(@PathVariable int uid, HttpServletRequest req, HttpServletResponse res){
		
		return todoDAO.index(uid);
	}
	
	@RequestMapping(path="/user/{uid}/todos/{tid}", method=RequestMethod.GET)
	public Todo show(@PathVariable int uid, @PathVariable int tid, HttpServletResponse res) {
		Todo todo = todoDAO.show(uid, tid);
		if (todo == null) {
			res.setStatus(404);
		}
		return todo;
	}
	
	@RequestMapping(path="/user/{uid}/todos", method=RequestMethod.POST)
	public Todo create(@PathVariable int uid,
						@RequestBody String json,
			 			HttpServletResponse res) {
		
		Todo todo = todoDAO.create(uid, json);
		if (todo == null) {
			res.setStatus(400);
		} else {
			res.setStatus(201);
		}
		
		return todo;
	}
	
	@RequestMapping(path="/user/{uid}/todos/{tid}", method=RequestMethod.PUT)
	public Todo update(@PathVariable int uid,
						@PathVariable int tid,
						@RequestBody String json,
						HttpServletResponse res) {
							
		Todo todo = todoDAO.update(uid, tid, json);
		if (todo == null) {
			res.setStatus(418);
		} else {
			res.setStatus(201);
		}
		
		return todo;
	
	}
	
	@RequestMapping(path="/user/{uid}/todos/{tid}", method=RequestMethod.DELETE)
	public Boolean destroy(@PathVariable int uid,
							@PathVariable int tid,
							HttpServletResponse res){
		try {
			if (todoDAO.destroy(uid,tid)) {
				res.setStatus(201);
				return true;
			}else {
				res.setStatus(405);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return false;
	}
	
	
}




